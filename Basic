package basicFunc;

import building.Cube;
import building.Figure;

public class Basic {
	public static void SetFigureFalse(Cube[] cube,boolean[][] data){
		data[cube[0].getX()/30 + 1][cube[0].getY()/30 + 1] = false;
		data[cube[1].getX()/30 + 1][cube[1].getY()/30 + 1] = false;
		data[cube[2].getX()/30 + 1][cube[2].getY()/30 + 1] = false;
		data[cube[3].getX()/30 + 1][cube[3].getY()/30 + 1] = false;
	}
	public static void SetFigureTrue(Cube[] cube,boolean[][] data){
		data[cube[0].getX()/30 + 1][cube[0].getY()/30 + 1] = true;
		data[cube[1].getX()/30 + 1][cube[1].getY()/30 + 1] = true;
		data[cube[2].getX()/30 + 1][cube[2].getY()/30 + 1] = true;
		data[cube[3].getX()/30 + 1][cube[3].getY()/30 + 1] = true;
	}
	public static void SetFigureMove(Cube[] cube){
		cube[0].setY(cube[0].getY()+30);
		cube[1].setY(cube[1].getY()+30);
		cube[2].setY(cube[2].getY()+30);
		cube[3].setY(cube[3].getY()+30);
	}
	public static boolean CheckFigureStopDown(Cube[] cube,boolean[][] data,Figure f){
		return (!data[cube[0].getX()/30 + 1][cube[0].getY()/30+2] && !data[cube[1].getX()/30 + 1][cube[1].getY()/30+2] && !data[cube[2].getX()/30 + 1][cube[2].getY()/30+2]&& !data[cube[3].getX()/30 + 1][cube[3].getY()/30+2]) && f.getStop()!=true;
		
	}
	public static boolean CheckFigureStopLeft(Cube[] cube,boolean[][] data,Figure f){
		return (!data[cube[0].getX()/30][cube[0].getY()/30 + 1] && !data[cube[1].getX()/30][cube[1].getY()/30 + 1]&& !data[cube[2].getX()/30][cube[2].getY()/30 + 1] && !data[cube[3].getX()/30][cube[3].getY()/30 + 1]) && f.getStop()!=true;
		
	}
	public static boolean CheckFigureStopRight(Cube[] cube,boolean[][] data,Figure f){
		return (!data[cube[0].getX()/30 + 2][cube[0].getY()/30 + 1] && !data[cube[1].getX()/30 + 2][cube[1].getY()/30 + 1] && !data[cube[2].getX()/30 + 2][cube[2].getY()/30 + 1] && !data[cube[3].getX()/30 + 2][cube[3].getY()/30 + 1]) && f.getStop()!=true;
	
	}
	public static boolean CheckBoundDown(Cube[] cube){
		return cube[0].getY()/30>21||cube[1].getY()/30>21||cube[2].getY()/30>21||cube[3].getY()/30>21;
		
	}
	public static boolean CheckBoundUp(Cube[] cube){
		return cube[0].getY()/30<1||cube[1].getY()/30<1||cube[2].getY()/30<1||cube[3].getY()/30<1;
		
	}
	public static boolean CheckBoundLeft(Cube[] cube){
		return cube[0].getX()/30+1>16 || cube[1].getX()/30+1>16 ||cube[2].getX()/30+1>16 ||cube[3].getX()/30+1>16 ;
	
	}
	public static boolean CheckBoundRight(Cube[] cube){
		return cube[0].getX()/30+1<1 || cube[1].getX()/30+1<1 || cube[2].getX()/30+1<1 || cube[3].getX()/30+1<1;
	
	}

}
